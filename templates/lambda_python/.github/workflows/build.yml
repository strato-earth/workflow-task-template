name: Build, Tag and Store build artifact

# Configure triggering rules
on:
  push:
    branches:
      - "STRAT-[0-9]+-*"
      - main

    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

# Setup permissions required for the OIDC trust with AWS
permissions:
  id-token: write
  contents: read

jobs:
  build-artifact:
    name: "Run test and build artifact"
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Setup Variables"
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "ARTIFACT_FILE_NAME=strato-${GITHUB_REPOSITORY#*/}-${{github.sha}}.zip" >> $GITHUB_ENV

      # If the branch is main or master, tag this artifact as 'latest'
      - if: github.ref == 'refs/heads/main'
        name: "Set the artifacts tag to latest for the main branch"
        run: |
          echo "ARTIFACT_TAG=latest" >> $GITHUB_ENV

      # If the branch is not main, tag this artifact with the name of the tag or branch that triggered this build
      - if: github.ref != 'refs/heads/main'
        name: "Set the artifacts tag for Feature Branches and GitHub tags"
        run: |
          echo "ARTIFACT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: "pipenv"

      - name: Install Dependencies
        run: scripts/install-dependencies.sh

      - name: Lint
        run: scripts/lint.sh

      - name: Test
        run: scripts/test.sh

      # Create an archive with everything that is needed
      - name: "Build"
        run: scripts/build.sh          

      # Login to AWS using pre-configured OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.BUILD_ARTIFACTS_AWS_ACCOUNT_ID }}:role/github-build-${{ env.REPO_NAME }}
          role-session-name: ${{ env.REPO_NAME }}-build
          aws-region: us-west-2

      # Push the build artifact to S3 named with the Commit SHA, and also a text file named with github.ref_name ("latest" for main) containing the commit SHA for reference.
      - if: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
        name: "Upload the build artifact to S3"
        run: |
          echo ${{github.sha}} > '${{env.REPO_NAME}}-${{env.ARTIFACT_TAG}}.txt'
          aws s3 cp '${{ env.REPO_NAME }}-${{ env.ARTIFACT_TAG }}.txt' s3://${{ secrets.BUILD_S3_ARTIFACTS_BUCKET }}/function/${{ env.REPO_NAME }}/
          echo 
          aws s3 cp '${{ env.ARTIFACT_FILE_NAME }}' s3://${{ secrets.BUILD_S3_ARTIFACTS_BUCKET }}/function/${{env.REPO_NAME}}/